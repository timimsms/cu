name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write
  issues: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        if: env.DOCKER_USERNAME != ''

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        if: env.DOCKER_USERNAME != ''
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Run tests
        run: |
          go test -v ./...
          ./scripts/ci.sh

      - name: Generate completions
        run: |
          go build -o cu ./cmd/cu
          ./cu completion bash > completions/cu.bash
          ./cu completion zsh > completions/_cu
          ./cu completion fish > completions/cu.fish

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HOMEBREW_TAP_GITHUB_TOKEN: ${{ secrets.HOMEBREW_TAP_GITHUB_TOKEN }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          GPG_FINGERPRINT: ${{ secrets.GPG_FINGERPRINT }}

      - name: Create Release Issue
        uses: actions/github-script@v7
        if: success()
        with:
          script: |
            const tag = context.ref.replace('refs/tags/', '');
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Release ${tag} - Post-Release Tasks`,
              body: `## Release ${tag} has been published! ðŸŽ‰
              
              ### Automated Tasks Completed:
              - [x] Built binaries for all platforms
              - [x] Created GitHub release with artifacts
              - [x] Generated checksums
              - [x] Updated Homebrew tap (if token provided)
              - [x] Published Docker images (if credentials provided)
              
              ### Manual Tasks Required:
              - [ ] Verify Homebrew installation: \`brew install timimsms/clickup/clickup-cli\`
              - [ ] Test Docker image: \`docker run clickup/cli:${tag} --version\`
              - [ ] Update documentation if needed
              - [ ] Announce release on social media
              - [ ] Close this issue when all tasks are complete
              
              ### Release Notes:
              https://github.com/${context.repo.owner}/${context.repo.repo}/releases/tag/${tag}`,
              labels: ['release', 'documentation']
            });
            console.log(`Created issue #${issue.data.number}`);

  test-install:
    needs: release
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Test direct download
        shell: bash
        run: |
          # Determine OS and architecture
          OS=$(echo "${{ runner.os }}" | tr '[:upper:]' '[:lower:]')
          ARCH="x86_64"
          if [ "$OS" = "macos" ]; then OS="darwin"; fi
          if [ "$OS" = "windows" ]; then 
            OS="windows"
            EXT=".zip"
          else
            EXT=".tar.gz"
          fi
          
          # Download and extract
          TAG="${{ github.ref_name }}"
          URL="https://github.com/${{ github.repository }}/releases/download/${TAG}/cu_${OS}_${ARCH}${EXT}"
          echo "Downloading from: $URL"
          
          if [ "$OS" = "windows" ]; then
            curl -L -o cu.zip "$URL"
            unzip cu.zip
            ./cu.exe --version
          else
            curl -L "$URL" | tar xz
            ./cu --version
          fi